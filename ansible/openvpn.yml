- name: Install and Configure Public Key Infrastructure, Ubuntu Firewall and OpenVPN Server
  hosts: myhosts
  vars:
    ansible_ssh_private_key_file: "vpn/.ssh/id_rsa"
  tasks:
    - name: Ping my hosts
      ansible.builtin.ping:

    - name: Print message
      ansible.builtin.debug:
        msg: I am alive

    - name: Whoami
      ansible.builtin.shell:
        cmd: whoami

    - name: Update apt
      ansible.builtin.shell:
        cmd: sudo apt update

    - name: Install openvpn and easy-rsa
      ansible.builtin.shell:
        cmd: sudo apt install -y openvpn easy-rsa

    - name: Create easy-rsa directory
      ansible.builtin.file:
        path: ~/easy-rsa
        state: directory
        mode: '0700'
        owner: admin
        group: admin

    - name: Create a symbolic link
      ansible.builtin.shell:
        cmd: ln -fs /usr/share/easy-rsa/* ~/easy-rsa/

    - name: Setting vars
      ansible.builtin.shell: |
        rm -f ~/easy-rsa/vars
        touch ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_COUNTRY    \"US\""                       >> ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_PROVINCE   \"NewYork\""                  >> ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_CITY       \"New York City\""            >> ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_ORG        \"DigitalOcean\""             >> ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_EMAIL      \"ipsharaev@gmail.com\""      >> ~/easy-rsa/vars
        echo "set_var EASYRSA_REQ_OU         \"Community\""                >> ~/easy-rsa/vars
        echo "set_var EASYRSA_ALGO           \"ec\""                       >> ~/easy-rsa/vars
        echo "set_var EASYRSA_DIGEST         \"sha512\""                   >> ~/easy-rsa/vars

    - name: Generate PKI
      ansible.builtin.shell: |
        cd ~/easy-rsa
        ./easyrsa --batch init-pki

    - name: Generate OpenVPN Certificate Request
      ansible.builtin.shell: |
        cd ~/easy-rsa
        ./easyrsa --batch gen-req server nopass
        sudo cp ~/easy-rsa/pki/private/server.key /etc/openvpn/server/

    - name: Building CA
      ansible.builtin.shell: |
        cd ~/easy-rsa
        ./easyrsa --batch build-ca nopass

    - name: Signing the OpenVPN Certificate Request
      ansible.builtin.shell: |
        cd ~/easy-rsa
        ./easyrsa --batch sign-req server server
        sudo cp ~/easy-rsa/pki/ca.crt /etc/openvpn/server/ca.crt
        sudo cp ~/easy-rsa/pki/issued/server.crt /etc/openvpn/server/server.crt

    - name: Generate OpenVPN TLS-crypt key
      ansible.builtin.shell: |
        cd ~/easy-rsa
        /usr/sbin/openvpn --genkey --secret ta.key
        sudo cp ta.key /etc/openvpn/server

    - name: Create Client Config
      ansible.builtin.shell: |
        mkdir -p ~/client-configs/keys
        chmod -R 700 ~/client-configs

    - name: Add Certificate for Admin
      ansible.builtin.shell: |
        cd ~/easy-rsa
        ./easyrsa --batch gen-req admin nopass
        cp pki/private/admin.key ~/client-configs/keys/
        ./easyrsa --batch sign-req client admin
        cp pki/issued/admin.crt ~/client-configs/keys/
        cp ~/easy-rsa/pki/ca.crt ~/client-configs/keys/
        cp ta.key ~/client-configs/keys/

    - name: Configure OpenVPN server
      ansible.builtin.shell: |
        sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf ~/server.conf
        sed -i 's/^tls-auth ta.key .*/;&/' ~/server.conf
        sed -i '/^;tls-auth ta.key .*/a tls-crypt ta.key' ~/server.conf
        sed -i 's/^cipher AES-256-CBC.*/;&/' ~/server.conf
        sed -i '/^;cipher AES-256-CBC.*/a cipher AES-256-GCM' ~/server.conf
        sed -i '/^cipher AES-256-GCM/a auth SHA256' ~/server.conf
        sed -i 's/^dh dh2048.pem.*/;&/' ~/server.conf
        sed -i '/^;dh dh2048.pem.*/a dh none' ~/server.conf
        sed -i '/^;push \"dhcp-option DNS 208.67.222.222\".*/s/^;//g' ~/server.conf
        sed -i '/^;push \"dhcp-option DNS 208.67.220.220\".*/s/^;//g' ~/server.conf
        sed -i '/^;user .*/c\user nobody' ~/server.conf
        sed -i '/^;group .*/c\group nogroup' ~/server.conf
        sed -i '/^;push \"redirect-gateway def1 bypass-dhcp\".*/s/^;//g' ~/server.conf
        sudo cp ~/server.conf /etc/openvpn/server/
        rm -f ~/server.conf

    - name: Configure IP forwarding
      ansible.builtin.shell: |
        sudo cp /etc/sysctl.conf ~/sysctl.conf
        sudo chown $USER:$USER ~/sysctl.conf
        echo "net.ipv4.ip_forward=1" >> ~/sysctl.conf
        sudo cp ~/sysctl.conf /etc/sysctl.conf
        rm -f ~/sysctl.conf
        sudo sysctl -p

    - name: Install and Configure Ubuntu Firewall
      ansible.builtin.shell: |
        sudo apt-get update && sudo apt-get -y install ufw
        export DEFAULT_INTERFACE_NAME=$(ip route show default | awk '/default/ {print $5}')
        sudo cp /etc/ufw/before.rules ~/before.rules
        sudo chown $USER:$USER ~/before.rules
        sed -i '1s/^/# START OPENVPN RULES\n/' ~/before.rules
        sed -i '2s/^/# NAT table rules\n/' ~/before.rules
        sed -i '3s/^/*nat\n/' ~/before.rules
        sed -i '4s/^/:POSTROUTING ACCEPT [0:0]\n/' ~/before.rules
        sed -i '5s/^/# Allow traffic from OpenVPN client to '"$DEFAULT_INTERFACE_NAME"' (change to the interface you discovered!)\n/' ~/before.rules
        sed -i '6s/^/-A POSTROUTING -s 10.8.0.0\/8 -o '"$DEFAULT_INTERFACE_NAME"' -j MASQUERADE\n/' ~/before.rules
        sed -i '7s/^/COMMIT\n/' ~/before.rules
        sed -i '8s/^/# END OPENVPN RULES\n/' ~/before.rules
        sudo cp ~/before.rules /etc/ufw/before.rules
        rm -f ~/before.rules
        sudo cp /etc/default/ufw ~/ufw
        sed -i 's/^DEFAULT_FORWARD_POLICY=\"DROP\".*/#&/' ~/ufw
        sed -i '/^#DEFAULT_FORWARD_POLICY=\"DROP\".*/a DEFAULT_FORWARD_POLICY=\"ACCEPT\"' ~/ufw
        sudo cp ~/ufw /etc/default/ufw
        rm -f ~/ufw
        sudo ufw allow 1194/udp
        sudo ufw allow OpenSSH
        sudo ufw disable
        sudo ufw --force enable

    - name: Starting OpenVPN server
      ansible.builtin.shell: |
        sudo systemctl -f enable openvpn-server@server.service
        sudo systemctl start openvpn-server@server.service

    - name: Creating the Client Configuration Infrastructure
      ansible.builtin.shell: |
        mkdir -p ~/client-configs/files
        cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/client-configs/base.conf
        sed -i '/^remote .*/c\remote {{ ansible_ssh_host }} 1194' ~/client-configs/base.conf
        sed -i '/^;user .*/c\user nobody' ~/client-configs/base.conf
        sed -i '/^;group .*/c\group nogroup' ~/client-configs/base.conf
